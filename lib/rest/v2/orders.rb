module Bitfinex
  module RESTv2Orders
    # Get active orders
    #
    # example:
    # client.orders
    def orders
      authenticated_post("auth/r/orders").body
    end

    # Get Trades generated by an Order
    #
    # @param order_id [int32] Id of the order
    # @param symbol [string] symbol used for the order
    #
    # @return [Array]
    #
    # @example:
    #   client.order_trades 10010, "tBTCUSD"
    #
    def order_trades(order_id, symbol="tBTCUSD")
      authenticated_post("auth/r/order/#{symbol}:#{order_id}/trades").body
    end

    ###
    # Submit a new order
    #
    # @param [Hash|Array|Order] order
    # @param [Block] cb - triggered upon receipt of confirmation notification
    ###
    def submit_order(order, &cb)
      if order.kind_of?(Array)
        packet = order
      elsif order.instance_of?(Models::Order)
        packet = order.to_new_order_packet
      elsif order.kind_of?(Hash)
        packet = Models::Order.new(order).to_new_order_packet
      else
        raise Exception, 'tried to submit order of unkown type'
      end
      payload = JSON.generate(packet)
      authenticated_post("auth/w/order/submit", params: packet).body
    end
  end
end
